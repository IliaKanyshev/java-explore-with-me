drop table if exists users cascade;
drop table if exists categories cascade;
drop table if exists locations cascade;
drop table if exists events cascade;
drop table if exists compilations cascade;
drop table if exists compilations_events cascade;


create table if not exists users
(
    ID    bigint generated by default as identity not null,
    NAME  varchar(255)                            not null,
    EMAIL varchar(255)                            not null,
    constraint PK_USER primary key (ID),
     constraint UQ_USER_EMAIL unique (email)
);


create table if not exists categories
(
    ID   bigint generated by default as identity not null,
    NAME varchar(255)                            not null,
    constraint PK_CATEGORY primary key (ID),
    constraint UQ_CATEGORY_NAME unique (name)
);

create table if not exists locations
(
    ID  bigint generated by default as identity not null,
    lat float                                   not null,
    lon float                                   not null,
    constraint PK_LOCATION primary key (ID)
);



create table if not exists events
(
    ID                 bigint generated by default as identity not null,
    annotation         varchar(2000)                           not null,
    category_id        bigint                                  not null,
    confirmed_requests bigint,
    description        varchar(7000)                           not null,
    event_date         timestamp without time zone             not null,
    created_on         timestamp without time zone             not null,
    initiator_id       bigint                                  not null,
    location_id        bigint                                  not null,
    paid               boolean,
    participant_limit  bigint,
    published_on       timestamp without time zone,
    request_moderation boolean,
    state              varchar(120)                            not null,
    title              varchar(120)                            not null,
    constraint PK_EVENT primary key (ID),
    constraint EVENTS_CATEGORIES_ID_FK foreign key (category_id) references categories (ID) on delete cascade,
    constraint EVENTS_LOCATIONS_ID_FK foreign key (location_id) references locations (ID) on delete cascade,
    constraint EVENTS_USERS_ID_FK foreign key (initiator_id) references USERS (ID) on delete cascade
);


create table if not exists requests
(
    ID        bigint generated by default as identity not null,
    created   timestamp without time zone,
    event_id     bigint                               not null,
    requester_id bigint                               not null,
    status    varchar(120)                            not null,
    constraint PK_REQUEST primary key (ID),
    constraint REQUESTS_EVENTS_ID_FK foreign key (event_id) references EVENTS (ID) on delete cascade,
    constraint REQUESTS_USERS_ID_FK foreign key (requester_id) references USERS (ID) on delete cascade
);


create table if not exists compilations
(
    id     bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    pinned BOOLEAN                                             not null,
    title  VARCHAR(50),
    CONSTRAINT uq_compilation_title UNIQUE (title)
);

create table if not exists compilations_events
(
    event_id       bigint                           not null,
    compilation_id bigint                           not null,
    constraint fk_to_compilations foreign key (compilation_id) references compilations (id),
    constraint fk_to_events foreign key (event_id) references events (id),
    constraint pk_compilation_of_events primary key (compilation_id, event_id)
);